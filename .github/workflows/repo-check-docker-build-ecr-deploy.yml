name: Court Document Parser CI/CD
# A workflow to build and release the latest code in container to AWS ECR designed for tna-judgments-parser
# The latest tag is retrieved from the GitHub repository
# Checks if the ECR exists and creates if required
# Checks to see if version has been deployed (a version in ECR has same tag as latest from GitHub
# If not deployed gets the latest pushed ECR version
# Check if the version should be deployed
# Builds and pushes image version if required
permissions:
  id-token: write
  contents: read
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  # This will be run on a workflow_call when it is decided where the code should exist or maybe a chron
  workflow_dispatch:
    inputs:
      repository_name:
        description: name of repository
        required: true
        type: string
        default: "nationalarchives/tna-judgments-parser"
      ecr_registry_path:
        type: string
        required: true
        default: "tre-v2/tna-judgments-parser"
      docker_file:
        type: string
        required: false
        default: "TRE/DockerfileV2"
jobs:
  scala-steward:
    runs-on: ubuntu-latest
    name: Launch Scala Steward
    steps:
      - uses: actions/checkout@v3
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Launch Scala Steward
        uses: scala-steward-org/scala-steward-action@v2
        with:
          github-token: ${{ secrets.WORKFLOW_PAT }}
          sign-commits: true
          signing-key: ${{ secrets.GPG_KEY_ID }}
          author-email: ${{ steps.import_gpg.outputs.email }}
          author-name: ${{ steps.import_gpg.outputs.name }}
          repos-file: 'repos.md'
