# Gets next git version tag, builds and deploys Docker image to ECR; if
# successful, tags git with new version.
name: docker-build-and-ecr-deploy-with-wiz-scan
on:
  workflow_call: # Define inputs to be passed from calling workflow
    inputs: # Name of created Docker image (version will be next git tag version)
      docker_image_name:
        type: string
        required: true
      # Dockerfile's directory
      build_dir:
        type: string
        required: true
      # ECR registry path (i.e. "foo" in "foo/docker-image-name")
      ecr_registry_path:
        type: string
        required: true
    secrets:
      AWS_OPEN_ID_CONNECT_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true
      WIZ_CLIENT_ID:
        required: true
      WIZ_CLIENT_SECRET:
        required: true
      WIZ_PROJECT_TRE:
        required: true
permissions:
  id-token: write  # required by aws-actions/configure-aws-credentials
  contents: write  # to push new git tag
jobs:
  build-deploy-and-tag-ecr-image:
    runs-on: ubuntu-latest
    steps:
      - name: Diagnostic info
        run: |
          printf 'github.event.repository.name=%s\n' "${{ github.event.repository.name }}"
          printf 'github.api_url=%s\n' "${{ github.api_url }}"
      - name: Checkout current
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Get the version to use to tag this build
        id: build-tag
        uses: nationalarchives/da-tre-github-actions/.github/actions/get-next-version@0.0.64
        with:
          repo-name: ${{ github.event.repository.name }}
      - name: Diagnostic info
        run: |
          printf 'steps.build-tag.outputs.next-version=%s\n' "${{ steps.build-tag.outputs.next-version }}"
      - name: AWS credential setup
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838
        with:
          role-to-assume: ${{ secrets.AWS_OPEN_ID_CONNECT_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: role-session-name-${{ github.actor }}-${{ github.triggering_actor }}
      - name: AWS ECR login
        id: aws-ecr-login
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076
      - name: Docker build and tag
        shell: bash
        run: |
          docker build -f Dockerfile \
          --tag "${{ steps.aws-ecr-login.outputs.registry }}/${{ inputs.ecr_registry_path }}/${{ inputs.docker_image_name }}:${{ steps.build-tag.outputs.next-version }}" \
          "${{ inputs.build_dir }}"
          docker images
      - name: Download Wiz CLI
        run: |
          curl -o wizcli https://wizcli.app.wiz.io/wizcli
          chmod +x wizcli
      - name: Authenticate to Wiz API and scan
        run: |
          ./wizcli auth --id ${{ secrets.WIZ_CLIENT_ID }} --secret ${{ secrets.WIZ_CLIENT_SECRET }}
          ./wizcli iac scan --path . --name ${{ inputs.docker_image_name }}-${{github.run_number}} --project ${{ secrets.WIZ_PROJECT_TRE}}  
          ./wizcli docker scan --image ${{ steps.aws-ecr-login.outputs.registry }}/${{ inputs.ecr_registry_path }}/${{ inputs.docker_image_name }}:${{ steps.build-tag.outputs.next-version }} --project ${{ secrets.WIZ_PROJECT_TRE}}
      - name: 'AWS ECR docker push'
        shell: bash
        run: |
          docker push "${{ steps.aws-ecr-login.outputs.registry }}/${{ inputs.ecr_registry_path }}/${{ inputs.docker_image_name }}:${{ steps.build-tag.outputs.next-version }}"
      - name: Add Git tag for this build
        run: |
          git tag ${{ steps.build-tag.outputs.next-version }}
          git push origin ${{ steps.build-tag.outputs.next-version }}
      - name: Wiz Docker Tag
        run: |
          ./wizcli docker tag --image ${{ steps.aws-ecr-login.outputs.registry }}/${{ inputs.ecr_registry_path }}/${{ inputs.docker_image_name }}:${{ steps.build-tag.outputs.next-version }}
