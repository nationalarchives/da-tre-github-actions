name: on-push-checks
on:
  workflow_call:
    inputs:
      run_unit_tests:
        type: boolean
        required: true
      run_feature_tests:
        type: boolean
        required: true
      run_pre_commit:
        type: boolean
        required: true
      requirements_txt:
        type: string
        required: false
      pip-url-output-file:
        type: string
        description: 'Name of file to which pip access URL will be written'
        default: 'pip-url.txt'
        required: false
    secrets:
      AWS_OPEN_ID_CONNECT_ROLE_ARN:
        required: false
      AWS_CODEARTIFACT_REPOSITORY_NAME:
        required: false
      AWS_CODEARTIFACT_REPOSITORY_DOMAIN:
        required: false
      AWS_CODEARTIFACT_REPOSITORY_ACCOUNT:
        required: false
      AWS_REGION:
        required: false
env:
  PYTHON_VERSION: '3.8'
jobs:
  check-unit-tests:
    if: inputs.run_unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Get AWS CodeArtifact pip URL
        uses: nationalarchives/tre-github-actions/.github/actions/get-aws-codeartifact-pip-url@0.0.2
        with:
          repository: ${{ secrets.AWS_CODEARTIFACT_REPOSITORY_NAME }}
          domain: ${{ secrets.AWS_CODEARTIFACT_REPOSITORY_DOMAIN }}
          domain-owner: ${{ secrets.AWS_CODEARTIFACT_REPOSITORY_ACCOUNT }}
          aws-region: ${{ secrets.AWS_REGION }}
          pip-url-output-file: ${{ inputs.pip-url-output-file }}
      - name: Run unit tests
        shell: bash
        run: |
          pip install -r ${{ inputs.requirements_txt }}
          cd tests/units
          python -m unittest discover
  check-feature-tests:
    runs-on: ubuntu-latest
    if: inputs.run_feature_tests
    steps:
      - name: Checkout current
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run feature tests
        shell: bash
        run: |
          pip install behave
          cd tests
          behave
  check-pre-commit:
    runs-on: ubuntu-latest
    if: inputs.run_pre_commit
    steps:
      - name: Checkout current
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run pre-commit
        shell: bash
        run: |
          pip install pre-commit
          pre-commit --version
          pre-commit install
          pre-commit run --all-files
