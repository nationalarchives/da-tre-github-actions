name: terraform-environments-action
on:
  workflow_call:
    inputs:
      github_environment:
        type: string
        required: true
      tre_environment:
        type: string
        required: true
      tf_dir:
        type: string
        required: true
      github_action_ref:
        type: string
        required: true
    secrets:
      ROLE_ARN:
        required: true
      AWS_PARAM_STORE_TF_BACKEND_KEY:
        required: true

env:
  TRE_ENV: ${{ inputs.tre_environment }}
  LOG_GROUP_NAME: "tre-${{ inputs.tre_environment }}-github-actions-logs"
  LOG_STREAM_NAME: "${{ github.triggering_actor }}-${{ github.run_id }}-${{ github.run_attempt }}"
  AWS_PARAM_STORE_TF_BACKEND_KEY: ${{ secrets.AWS_PARAM_STORE_TF_BACKEND_KEY }}
  AWS_PARAM_STORE_TF_VARS_KEY: tre-${{ inputs.tre_environment }}-tfvars
  TRIGGERING_ACTOR: ${{ github.triggering_actor }}
  TF_DIR: ${{ inputs.tf_dir }}
  TERRAFORM_PLAN_BUCKET: s3://tre-terraform-plan
  CLOUDWATCH_LOGS_BASE_URL: "https://console.aws.amazon.com/cloudwatch/home?region=eu-west-2#logsV2:log-groups/log-group/"

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.github_environment }}
    steps:
      - name: Set friendly logs_url
        run: echo "CLOUDWATCH_LOGS_URL=${CLOUDWATCH_LOGS_BASE_URL}${LOG_GROUP_NAME}/log-events/${LOG_STREAM_NAME}" >> $GITHUB_ENV
      - name: Configure AWS credentials for test AWS role
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: eu-west-2
          role-session-name: github-username-${{ github.triggering_actor }}
      - name: Checkout da-tre-github-actions
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: nationalarchives/da-tre-github-actions
          ref: ${{ inputs.github_action_ref }}
      - name: Copy /scripts
        run: |
          pwd
          ls -la ../
          cp -r scripts ../
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive
      - name: Setting terraform version
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.12.2
          terraform_wrapper: false
      - name: Terraform Plan
        run: |
          cd ${TF_DIR}
          terraform -v
          aws ssm get-parameters --name "${AWS_PARAM_STORE_TF_BACKEND_KEY}" --with-decryption --query "Parameters[*].Value" --output text > backend.conf
          aws ssm get-parameters --name "${AWS_PARAM_STORE_TF_VARS_KEY}" --with-decryption --query "Parameters[*].Value" --output text > terraform.tfvars.json
          echo "backend.conf"
          cat backend.conf
          echo "terraform.tfvars.json"
          cat terraform.tfvars.json          
          terraform init -backend-config=backend.conf -reconfigure
          echo "list workspaces"
          terraform workspace list
          terraform workspace select ${TRE_ENV} 
          terraform plan -no-color -detailed-exitcode -input=false -var-file="terraform.tfvars.json"
